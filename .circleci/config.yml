version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3

jobs:
  terratest:
    docker:
      - image: cimg/go:1.22.2
    steps:
      - run:
          name: pull infra repo
          command: |
            git clone https://$INFRA_REPO_TOKEN@github.com/bensh199/WeatherApp-infra.git
            ls -ltR
            echo ############################################################
            env

      - run:
          name: install and configure awscli
          command: |
            sudo apt-get update
            sudo apt install python3-pip
            pip3 install awscli --upgrade --user
            AWS_REGION=il-central-1


      - run:
          name: install terraform
          command: |
            wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install terraform

      - run:
          name: install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - run:
          name: install helm
          command: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh

      - run:
          name: install eksctl
          command: |
            ARCH=amd64
            PLATFORM=$(uname -s)_$ARCH
            curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
            tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
            sudo mv /tmp/eksctl /usr/local/bin

      - run:
          name: run terratest
          command: |
            export TF_VAR_ROOT_PATH=$(pwd)
            env
            cd WeatherApp-infra/Terraform/Terraform-modules/Tests
            go mod init test
            go mod tidy
            go test -v -timeout 30m
          

  build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: login to dockerhub
          command: docker login -u $DOCKER_HUB_USER	 -p $DOCKER_HUB_TOKEN

      - run:
          name: build image
          command: |
            docker build -t bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID ./Python-Project/.
            docker tag bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID bensh99/weatherapp-features:V1.$CIRCLE_WORKFLOW_ID
            docker tag bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID bensh99/weatherapp:latest
      
      - run:
          name: publish docker image
          command: |
            docker push bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID
            docker push bensh99/weatherapp:latest

  test:
    docker:
      - image: cimg/python:3.12.3
    steps:
      - setup_remote_docker:
          docker_layer_caching: true

      - checkout

      - run:
          name: install python libraries
          command: |
            pip install requests

      - run:
          name: test new image
          command: |
            docker pull bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID
            docker run --rm --name weatherapp -p 8000:8000 -d bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID
            python3 ./WeatherApp-SC/Python-Project/test.py


workflows:
  test-terraform:
    jobs:
      - terratest

  build-image-and-test-image:
    jobs:
      - build
      - test:
          requires:
            - build