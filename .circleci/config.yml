# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  terratest:
    docker:
      - image: cimg/go:1.22.2
    steps:
      - run:
          name: pull infra repo
          command: |
            git clone https://$INFRA_REPO_TOKEN@github.com/bensh199/WeatherApp-infra.git

      - run:
          name: install and configure awscli
          command: |
            sudo apt-get update
            sudo apt install python3-pip
            pip3 install awscli --upgrade --user
            aws configure set aws_access_key $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region il-central-1

      - run:
          name: test cli
          command: |
            aws ec2 describe-instances --output text
          

  build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: login to dockerhub
          command: docker login -u $DOCKER_HUB_USER	 -p $DOCKER_HUB_TOKEN

      - run:
          name: build image
          command: |
            docker build -t bensh99/weatherapp:V1.$CIRCLE_BUILD_NUM ./Python-Project/.
            docker tag bensh99/weatherapp:V1.$CIRCLE_BUILD_NUM bensh99/weatherapp-features:V1.$CIRCLE_BUILD_NUM
            docker tag bensh99/weatherapp:V1.$CIRCLE_BUILD_NUM bensh99/weatherapp:latest
      
      - run:
          name: publish docker image
          command: |
            docker push bensh99/weatherapp:V1.$CIRCLE_BUILD_NUM
            docker push bensh99/weatherapp:latest


workflows:
  build-image:
    jobs:
      - terratest
      - build:
          requires:
            - terratest