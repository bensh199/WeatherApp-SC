version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3

jobs:
  terratest:
    docker:
      - image: bensh99/circleci-terratest:latest
    steps:
      - run:
          name: pull infra repo
          command: |
            git clone https://$INFRA_REPO_TOKEN@github.com/bensh199/WeatherApp-infra.git

      - run:
          name: run terratest
          command: |
            export TF_VAR_ROOT_PATH=$(pwd)
            export KUBE_CONFIG_PATH=/home/circleci/.kube/config
            env
            cd WeatherApp-infra/Terraform/Terraform-modules/Tests
            go mod init test
            go mod tidy
            go test -v -timeout 30m
          

  build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: login to dockerhub
          command: docker login -u $DOCKER_HUB_USER	 -p $DOCKER_HUB_TOKEN

      - run:
          name: build image
          command: |
            docker build -t bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID ./Python-Project/.
            docker tag bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID bensh99/weatherapp-features:V1.$CIRCLE_WORKFLOW_ID
            docker tag bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID bensh99/weatherapp:latest
      
      - run:
          name: publish docker image
          command: |
            docker push bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID
            docker push bensh99/weatherapp:latest

  test:
    docker:
      - image: cimg/python:3.12.3
    steps:
      - setup_remote_docker:
          docker_layer_caching: true

      - checkout

      - run:
          name: install python libraries
          command: |
            pip install requests

      - run:
          name: test new image
          command: |
            pwd
            ls -laR
            docker pull bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID
            docker run --rm --name weatherapp -p 8000:8000 -d bensh99/weatherapp:V1.$CIRCLE_WORKFLOW_ID
            python3 Python-Project/test.py


workflows:
  test-terraform:
    jobs:
      - terratest

  # build-image-and-test-image:
  #   jobs:
  #     - build
  #     - test:
  #         requires:
  #           - build 